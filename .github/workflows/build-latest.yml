---
name: Build nvim

on:
  push:
    paths:
      - build.sh
    branches:
      - main

  workflow_dispatch:
    inputs:
      version:
        type: string
        description: Which nvim version to build

jobs:
  build:
    runs-on: ${{ matrix.runner }}
    container: ${{ matrix.builder }}
    strategy:
      matrix:
        include:
          # for *-apple-darwin
          - runner: macos-latest
          # for x86_64-linux-gnu
          - runner: ubuntu-latest
            builder: lcr.io/mtdcy/builder:ubuntu-22.04
          # for aarch64-linux-gnu
          - runner: ubuntu-latest-arm
            builder: lcr.io/mtdcy/builder:ubuntu-22.04

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Build
        id: build
        shell: bash
        run: |
          version="${{ github.event.inputs.version }}"
          [ -z "$version" ] || perl -pi -e "s/NVIM_VERSION=.*$/NVIM_VERSION=$version/" build.sh

          IFS='=' read -r _ version <<< "$(grep "NVIM_VERSION=" build.sh | head -n1)"
          echo "version=$version" >> "$GITHUB_OUTPUT"

          ./build.sh

      - name: Release
        uses: https://git.mtdcy.top:8443/actions/gitea-release-action@v1
        with:
          tag_name: ${{ steps.build.outputs.version }}
          name: nvim ${{ steps.build.outputs.version }}
          body: nvim ${{ steps.build.outputs.version }}
          append_body: false
          make_latest: true
          files: |-
            release/**
